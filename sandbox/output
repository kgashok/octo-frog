./test
test: hiker.tests.c:14: life_the_universe_and_everything: Assertion `__extension__ ({ size_t __s1_len, __s2_len; (__builtin_constant_p (answer(15)) && __builtin_constant_p ("FizzBuzz") && (__s1_len = __builtin_strlen (answer(15)), __s2_len = __builtin_strlen ("FizzBuzz"), (!((size_t)(const void *)((answer(15)) + 1) - (size_t)(const void *)(answer(15)) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("FizzBuzz") + 1) - (size_t)(const void *)("FizzBuzz") == 1) || __s2_len >= 4)) ? __builtin_strcmp (answer(15), "FizzBuzz") : (__builtin_constant_p (answer(15)) && ((size_t)(const void *)((answer(15)) + 1) - (size_t)(const void *)(answer(15)) == 1) && (__s1_len = __builtin_strlen (answer(15)), __s1_len < 4) ? (__builtin_constant_p ("FizzBuzz") && ((size_t)(const void *)(("FizzBuzz") + 1) - (size_t)(const void *)("FizzBuzz") == 1) ? __builtin_strcmp (answer(15), "FizzBuzz") : (__extension__ ({ const unsigned char *__s2 = (const unsigned char *) (const char *) ("FizzBuzz"); register int __result = (((const unsigned char *) (const char *) (answer(15)))[0] - __s2[0]); if (__s1_len > 0 && __result == 0) { __result = (((const unsigned char *) (const char *) (answer(15)))[1] - __s2[1]); if (__s1_len > 1 && __result == 0) { __result = (((const unsigned char *) (const char *) (answer(15)))[2] - __s2[2]); if (__s1_len > 2 && __result == 0) __result = (((const unsigned char *) (const char *) (answer(15)))[3] - __s2[3]); } } __result; }))) : (__builtin_constant_p ("FizzBuzz") && ((size_t)(const void *)(("FizzBuzz") + 1) - (size_t)(const void *)("FizzBuzz") == 1) && (__s2_len = __builtin_strlen ("FizzBuzz"), __s2_len < 4) ? (__builtin_constant_p (answer(15)) && ((size_t)(const void *)((answer(15)) + 1) - (size_t)(const void *)(answer(15)) == 1) ? __builtin_strcmp (answer(15), "FizzBuzz") : (__extension__ ({ const unsigned char *__s1 = (const unsigned char *) (const char *) (answer(15)); register int __result = __s1[0] - ((const unsigned char *) (const char *) ("FizzBuzz"))[0]; if (__s2_len > 0 && __result == 0) { __result = (__s1[1] - ((const unsigned char *) (const char *) ("FizzBuzz"))[1]); if (__s2_len > 1 && __result == 0) { __result = (__s1[2] - ((const unsigned char *) (const char *) ("FizzBuzz"))[2]); if (__s2_len > 2 && __result == 0) __result = (__s1[3] - ((const unsigned char *) (const char *) ("FizzBuzz"))[3]); } } __result; }))) : __builtin_strcmp (answer(15), "FizzBuzz")))); }) == 0' failed.
make: *** [test.output] Aborted
